makeCacheMatrix <- function(x = matrix())
{
inv <- NULL
set <- function(y)
{
x <<- y
inv <<- NULL
}
get <- function() x
setInverse <- function(inverse) inv <<- inverse
getInverse <- function() inv
list(set = set,
get = get,
setInverse = setInverse,
getInverse = getInverse)
}
cacheSolve <- function(x, ...)
{
inv <- x$getInverse()
if (!is.null(inv))
{
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setInverse(inv)
inv
}
m1<-matrix(1:4,2,2)
makeCacheMatrix(m1)
m1$get()
makeCacheMatrix <- function(x = matrix())
{
inv <- NULL
set <- function(y)
{
x <<- y
inv <<- NULL
}
get <- function() x
setInverse <- function(inverse) inv <<- inverse
getInverse <- function() inv
list(set = set,
get = get,
setInverse = setInverse,
getInverse = getInverse)
}
cacheSolve <- function(x, ...)
{
inv <- x$getInverse()
if (!is.null(inv))
{
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setInverse(inv)
inv
}
m1<-makeCacheMatrix(matrix(1:4,2,2))
m1$getInverse()
cacheSolve(m1)
cacheSolve(m1)
